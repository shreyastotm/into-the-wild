{
  "name": "vite_react_shadcn_ts",
  "private": true,
  "version": "0.4.8",
  "type": "module",
  "engines": {
    "node": "22.x"
  },
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "build:dev": "npm run type-check && vite build --mode development",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:refactor": "eslint . --config eslint.refactor.config.js",
    "lint:refactor:fix": "eslint . --config eslint.refactor.config.js --fix",
    "type-check": "tsc --noEmit",
    "type-check:strict": "tsc --noEmit --strict",
    "type-check:watch": "tsc --noEmit --watch",
    "preview": "vite preview",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage --config vitest.enhanced.config.ts",
    "test:coverage:enhanced": "vitest run --coverage --config vitest.enhanced.config.ts --reporter=verbose",
    "precommit": "npm run type-check && npm run lint && npm run test:run",
    "// Code Quality Agents": "üõ†Ô∏è Automated code quality improvement agents",
    "refactor": "powershell -ExecutionPolicy Bypass -File scripts/refactor.ps1",
    "bug-detect": "powershell -ExecutionPolicy Bypass -File scripts/bug-detector.ps1",
    "auto-fix": "tsx scripts/auto-fix.ts",
    "quality-check": "npm run type-check && npm run lint && npm run test:coverage",
    "quality-check:strict": "npm run type-check:strict && npm run lint:refactor && npm run test:coverage:enhanced",
    "full-analysis": "npm run refactor && npm run bug-detect && npm run auto-fix",
    "// Development Workflow": "üöÄ Enhanced development workflow",
    "dev:analyze": "npm run full-analysis && npm run dev",
    "build:analyze": "npm run full-analysis && npm run build",
    "commit": "npm run precommit && git add . && git status",
    "// Agent Utilities": "üîß Individual agent components",
    "analyze:eslint": "npm run lint:refactor",
    "analyze:typescript": "npm run type-check:strict",
    "analyze:coverage": "npm run test:coverage:enhanced",
    "analyze:security": "npm audit --audit-level moderate",
    "analyze:bundle": "npm run build:dev && powershell -Command \"if (Test-Path 'dist/assets/*.js') { Get-ChildItem 'dist/assets/*.js' | ForEach-Object { Write-Host ('Bundle: ' + $_.Name + ' - ' + (Get-Item $_.FullName).Length + ' bytes') } } else { Write-Host 'Bundle analysis complete' }\"",
    "analyze:accessibility": "echo '‚ôø Accessibility check: Manual review required - check WCAG 2.1 AA compliance'",
    "analyze:performance": "echo '‚ö° Performance check: Run Lighthouse audit for detailed analysis'",
    "// Code Cleanup Agent": "üßπ Remove unused files and redundant code",
    "cleanup:files": "tsx scripts/cleanup.ts",
    "cleanup:imports": "echo 'Removing unused imports...' && npm run lint:refactor:fix",
    "cleanup:code": "npm run cleanup:files && npm run cleanup:imports",
    "cleanup:assets": "echo 'Asset optimization coming soon'",
    "// Architecture Improvement Agent": "üèóÔ∏è Optimize folder structure and separation",
    "analyze:structure": "tsx scripts/architecture-optimize.ts",
    "separate:frontend": "echo 'Frontend/backend separation coming soon'",
    "separate:backend": "echo 'Backend separation coming soon'",
    "optimize:imports": "npm run cleanup:imports",
    "// Code Beautification Agent": "üíÖ Format code and improve readability",
    "beautify:code": "tsx scripts/beautify.ts",
    "beautify:imports": "npm run cleanup:imports && npx import-sort --write '**/*.{ts,tsx}'",
    "beautify:naming": "echo 'Naming convention analysis...' && tsx scripts/beautify.ts",
    "beautify:comments": "echo 'Documentation improvement analysis...' && tsx scripts/beautify.ts",
    "beautify:all": "npm run beautify:code && npm run beautify:imports && npm run beautify:naming",
    "// Indian Market Compliance": "üáÆüá≥ Indian market standards validation",
    "check:indian-compliance": "powershell -Command \"Write-Host 'Checking Indian market compliance...'; $currency = (Get-ChildItem -Path 'src' -Recurse -File -Include '*.ts', '*.tsx' | Select-String '‚Çπ' | Measure-Object).Count; Write-Host '- Currency (‚Çπ):' $currency; $dates = (Get-ChildItem -Path 'src' -Recurse -File -Include '*.ts', '*.tsx' | Select-String 'DD/MM/YYYY|formatIndianDate|dd/mm/yyyy' | Measure-Object).Count; Write-Host '- Indian dates:' $dates; $gst = (Get-ChildItem -Path 'src' -Recurse -File -Include '*.ts', '*.tsx' | Select-String 'GST|calculateGST|18%' | Measure-Object).Count; Write-Host '- GST calculations:' $gst\"",
    "check:mobile-responsive": "powershell -Command \"Write-Host 'Checking mobile responsiveness...'; $responsive = (Get-ChildItem -Path 'src' -Recurse -File -Include '*.ts', '*.tsx' | Select-String 'sm:|md:|lg:|xl:|grid-cols-|flex-col|mobile|responsive' | Measure-Object).Count; Write-Host '- Responsive breakpoints:' $responsive\"",
    "check:dark-mode": "powershell -Command \"Write-Host 'Checking dark mode support...'; $dark = (Get-ChildItem -Path 'src' -Recurse -File -Include '*.ts', '*.tsx' | Select-String 'dark:|theme|ThemeProvider|next-themes' | Measure-Object).Count; Write-Host '- Dark mode patterns:' $dark\"",
    "// Reports and Documentation": "üìä Quality reporting and documentation",
    "report:generate": "npm run full-analysis && echo 'üìÑ Reports generated in reports/ directory'",
    "report:coverage": "npm run test:coverage && echo 'üìä Coverage report: coverage/index.html'",
    "docs:quality": "echo 'üìö Quality documentation: docs/CODE_QUALITY_AGENTS_SYSTEM.md'",
    "// Maintenance": "üßπ System maintenance and cleanup",
    "clean": "powershell -Command \"Remove-Item -Recurse -Force dist, coverage, logs, reports -ErrorAction SilentlyContinue; Write-Host 'Cleaned build artifacts'\"",
    "clean:all": "npm run clean && powershell -Command \"Remove-Item -Recurse -Force node_modules/.cache -ErrorAction SilentlyContinue; Write-Host 'Deep clean completed'\"",
    "prepare": "husky install"
  },
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@emoji-mart/react": "^1.1.1",
    "@hookform/resolvers": "^3.9.0",
    "@radix-ui/react-accordion": "^1.2.0",
    "@radix-ui/react-alert-dialog": "^1.1.1",
    "@radix-ui/react-aspect-ratio": "^1.1.0",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.1",
    "@radix-ui/react-collapsible": "^1.1.0",
    "@radix-ui/react-context-menu": "^2.2.1",
    "@radix-ui/react-dialog": "^1.1.2",
    "@radix-ui/react-dropdown-menu": "^2.1.1",
    "@radix-ui/react-hover-card": "^1.1.1",
    "@radix-ui/react-label": "^2.1.0",
    "@radix-ui/react-menubar": "^1.1.1",
    "@radix-ui/react-navigation-menu": "^1.2.0",
    "@radix-ui/react-popover": "^1.1.1",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-radio-group": "^1.2.0",
    "@radix-ui/react-scroll-area": "^1.1.0",
    "@radix-ui/react-select": "^2.1.1",
    "@radix-ui/react-separator": "^1.1.0",
    "@radix-ui/react-slider": "^1.2.0",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-switch": "^1.1.0",
    "@radix-ui/react-tabs": "^1.1.0",
    "@radix-ui/react-toast": "^1.2.1",
    "@radix-ui/react-toggle": "^1.1.0",
    "@radix-ui/react-toggle-group": "^1.1.0",
    "@radix-ui/react-tooltip": "^1.2.0",
    "@supabase/auth-helpers-react": "^0.5.0",
    "@supabase/supabase-js": "^2.49.4",
    "@tanstack/react-query": "^5.56.2",
    "@types/estree": "^1.0.7",
    "@types/json-schema": "^7.0.15",
    "@types/leaflet": "^1.9.17",
    "@types/react-router-dom": "^5.3.3",
    "@types/testing-library__dom": "^7.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.0",
    "date-fns": "^4.1.0",
    "date-fns-tz": "^3.2.0",
    "embla-carousel-react": "^8.3.0",
    "input-otp": "^1.2.4",
    "leaflet": "^1.9.4",
    "lucide-react": "^0.462.0",
    "next-themes": "^0.3.0",
    "react": "^18.3.1",
    "react-day-picker": "^9.6.7",
    "react-dom": "^18.3.1",
    "react-helmet-async": "^2.0.5",
    "react-hook-form": "^7.53.0",
    "react-leaflet": "^4.2.1",
    "react-resizable-panels": "^2.1.3",
    "react-router-dom": "^6.30.0",
    "recharts": "^2.12.7",
    "sonner": "^1.5.0",
    "tailwind-merge": "^2.5.2",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^0.9.3",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@axe-core/cli": "^4.11.0",
    "@eslint/js": "^9.9.0",
    "@tailwindcss/typography": "^0.5.15",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^22.5.5",
    "@types/react": "^18.3.20",
    "@types/react-dom": "^18.3.6",
    "@typescript-eslint/parser": "^8.46.2",
    "@vitejs/plugin-react-swc": "^3.5.0",
    "autoprefixer": "^10.4.20",
    "broken-link-checker": "^0.7.8",
    "eslint": "^9.9.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.9",
    "globals": "^15.9.0",
    "husky": "^9.1.7",
    "import-sort": "^6.0.0",
    "jscpd": "^4.0.5",
    "jsdom": "^26.1.0",
    "lighthouse": "^12.8.2",
    "lint-staged": "^16.2.6",
    "postcss": "^8.4.47",
    "supabase": "^2.53.6",
    "tailwindcss": "^3.4.11",
    "terser": "^5.44.0",
    "ts-unused-exports": "^11.0.1",
    "tsx": "^4.20.6",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.0.1",
    "vite": "^5.4.19",
    "vitest": "^3.1.2"
  }
}
