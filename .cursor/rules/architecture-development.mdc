---
description: "Core architecture and development workflow enforcement"
globs: ["**/*.{ts,tsx,js,jsx,sql,md}", "docker-compose.yml", "Dockerfile*"]
alwaysApply: true
---

# üèóÔ∏è ARCHITECTURE & DEVELOPMENT RULES

## 1.1 Docker-First Development
‚úÖ **REQUIRED:** All database operations must go through Docker containers
‚ùå **FORBIDDEN:** Direct Supabase cloud database modifications during development
‚úÖ **REQUIRED:** Use `docker-compose up -d postgres backend` for local development
‚úÖ **REQUIRED:** Apply migrations via Docker exec commands, not Supabase CLI

## 1.2 Frontend-Backend Separation
‚úÖ **REQUIRED:** Frontend code must be in `src/` directory only
‚ùå **FORBIDDEN:** Backend logic in React components
‚úÖ **REQUIRED:** API calls through Supabase client or fetch to backend endpoints
‚úÖ **REQUIRED:** Environment variables prefixed with `VITE_` for frontend

## 1.3 Indian Market Context
‚úÖ **REQUIRED:** Date formats must use DD/MM/YYYY format
‚úÖ **REQUIRED:** Currency display must show ‚Çπ symbol and Indian number formatting
‚úÖ **REQUIRED:** GST calculations must be included where applicable (18% default)
‚úÖ **REQUIRED:** Mobile-first responsive design (320px minimum width)

## 1.4 TypeScript Strict Mode
‚úÖ **REQUIRED:** All TypeScript files must use strict type checking
‚úÖ **REQUIRED:** No `any` types allowed - use proper interfaces
‚úÖ **REQUIRED:** Generic types for reusable components
‚úÖ **REQUIRED:** Proper error type definitions and handling

## 1.5 Deployment Configuration Standards
‚úÖ **REQUIRED:** Use Node.js 22.x (LTS) in production
‚úÖ **REQUIRED:** Install terser as dev dependency for Vite production builds
‚úÖ **REQUIRED:** Use `engines` field in package.json for Node.js version (not vercel.json)
‚úÖ **REQUIRED:** Environment variables must be prefixed with `VITE_` for frontend
‚úÖ **REQUIRED:** All build dependencies must be explicitly installed before deployment

## 1.6 Deployment Authorization & Documentation Standards

### 1.6.1 Explicit Deployment Authorization
‚úÖ **REQUIRED:** All deployments must be explicitly authorized by project lead
‚úÖ **REQUIRED:** Use "DEPLOY" command in commit messages or deployment prompts
‚úÖ **REQUIRED:** Include version number and change summary in deployment authorization
‚úÖ **REQUIRED:** Verify all master documents are current and accurate before deployment
‚ùå **FORBIDDEN:** Automatic deployments without explicit "DEPLOY" authorization
‚ùå **FORBIDDEN:** Deployments triggered by CI/CD without manual approval
‚ùå **FORBIDDEN:** Emergency deployments without documentation updates

### 1.6.2 Pre-Deployment Documentation Requirements
‚úÖ **REQUIRED:** All 5 master documents must be updated and current
‚úÖ **REQUIRED:** Temporary documentation must be consolidated and archived
‚úÖ **REQUIRED:** Run complete documentation quality audit before deployment
‚úÖ **REQUIRED:** Include documentation changelog in deployment summary
‚úÖ **REQUIRED:** Verify all internal documentation links are functional

### 1.6.3 Deployment Quality Gates
‚úÖ **REQUIRED:** Run `npm run quality-check:strict` before deployment
‚úÖ **REQUIRED:** Verify `npm run analyze:accessibility` passes
‚úÖ **REQUIRED:** Confirm `npm run analyze:performance` meets targets
‚úÖ **REQUIRED:** Validate all master documents are accessible and linked correctly
‚úÖ **REQUIRED:** Archive any remaining temporary documentation